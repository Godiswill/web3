/**
 * EIP712 类型化数据签名提供一种更高级、更安全的签名。
 * 当 DApp 请求签名时，钱包可以展示签名消息的原始数据，
 * 用户可以检查这些数据是否符合自己的预期。
 * 相比之前钱包签名验证只能展示签名的 Hash（用户很难理解），
 * 方便用户检查识别是否是过度或恶意签名请求。
 */
import { ethers } from 'ethers';

// 注意公共节点可能不更新或失效
// https://chainlist.org/chain/11155111 可以替换最新的可以接口用来测试
const SEPOLIA_URL = 'wss://ethereum-sepolia-rpc.publicnode.com';
const provider = new ethers.WebSocketProvider(SEPOLIA_URL);
const privateKey =
  '0xdf05966ab50e02a0c9b96a728ded9e646c2a324a8756bd0a2ef259902f72930d';
const wallet = new ethers.Wallet(privateKey, provider);
const address = wallet.address;

const abi = [
  'function retrieve() public view returns (uint256)',
  'function getSigner(address, uint256, bytes memory) public view returns (address)',
  'function permitStore(uint256, bytes memory) public',
];
// const bytecode =
//   '608060405234801561000f575f80fd5b506004361061003f575f3560e01c80632e64cec1146100435780635858aa26146100615780637fb4bf2a14610091575b5f80fd5b61004b6100ad565b60405161005891906104e3565b60405180910390f35b61007b600480360381019061007691906106cd565b6100b6565b6040516100889190610748565b60405180910390f35b6100ab60048036038101906100a69190610761565b6101b0565b005b5f600154905090565b5f60418251146100fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f290610815565b60405180910390fd5b5f805f602085015192506040850151915060608501515f1a90505f80547fd0424b76ec7a3227309117de6d952e26508aa80cc81ccac30dc95ed1419924cd898960405160200161014d9392919061084b565b604051602081830303815290604052805190602001206040516020016101749291906108f4565b6040516020818303038152906040528051906020012090506101a382858584610254909392919063ffffffff16565b9450505050509392505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101f33384846100b6565b73ffffffffffffffffffffffffffffffffffffffff1614610249576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024090610974565b60405180910390fd5b816001819055505050565b5f805f8061026488888888610282565b9250925092506102748282610369565b829350505050949350505050565b5f805f7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0845f1c11156102be575f60038592509250925061035f565b5f6001888888886040515f81526020016040526040516102e194939291906109ad565b6020604051602081039080840390855afa158015610301573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610352575f60015f801b9350935093505061035f565b805f805f1b935093509350505b9450945094915050565b5f600381111561037c5761037b6109f0565b5b82600381111561038f5761038e6109f0565b5b03156104c757600160038111156103a9576103a86109f0565b5b8260038111156103bc576103bb6109f0565b5b036103f3576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60026003811115610407576104066109f0565b5b82600381111561041a576104196109f0565b5b0361045e57805f1c6040517ffce698f700000000000000000000000000000000000000000000000000000000815260040161045591906104e3565b60405180910390fd5b600380811115610471576104706109f0565b5b826003811115610484576104836109f0565b5b036104c657806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016104bd9190610a1d565b60405180910390fd5b5b5050565b5f819050919050565b6104dd816104cb565b82525050565b5f6020820190506104f65f8301846104d4565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105368261050d565b9050919050565b6105468161052c565b8114610550575f80fd5b50565b5f813590506105618161053d565b92915050565b610570816104cb565b811461057a575f80fd5b50565b5f8135905061058b81610567565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6105df82610599565b810181811067ffffffffffffffff821117156105fe576105fd6105a9565b5b80604052505050565b5f6106106104fc565b905061061c82826105d6565b919050565b5f67ffffffffffffffff82111561063b5761063a6105a9565b5b61064482610599565b9050602081019050919050565b828183375f83830152505050565b5f61067161066c84610621565b610607565b90508281526020810184848401111561068d5761068c610595565b5b610698848285610651565b509392505050565b5f82601f8301126106b4576106b3610591565b5b81356106c484826020860161065f565b91505092915050565b5f805f606084860312156106e4576106e3610505565b5b5f6106f186828701610553565b93505060206107028682870161057d565b925050604084013567ffffffffffffffff81111561072357610722610509565b5b61072f868287016106a0565b9150509250925092565b6107428161052c565b82525050565b5f60208201905061075b5f830184610739565b92915050565b5f806040838503121561077757610776610505565b5b5f6107848582860161057d565b925050602083013567ffffffffffffffff8111156107a5576107a4610509565b5b6107b1858286016106a0565b9150509250929050565b5f82825260208201905092915050565b7f696e76616c6964207369676e6174757265206c656e67746800000000000000005f82015250565b5f6107ff6018836107bb565b915061080a826107cb565b602082019050919050565b5f6020820190508181035f83015261082c816107f3565b9050919050565b5f819050919050565b61084581610833565b82525050565b5f60608201905061085e5f83018661083c565b61086b6020830185610739565b61087860408301846104d4565b949350505050565b5f81905092915050565b7f19010000000000000000000000000000000000000000000000000000000000005f82015250565b5f6108be600283610880565b91506108c98261088a565b600282019050919050565b5f819050919050565b6108ee6108e982610833565b6108d4565b82525050565b5f6108fe826108b2565b915061090a82856108dd565b60208201915061091a82846108dd565b6020820191508190509392505050565b7f45495037313253746f726167653a20496e76616c6964207369676e61747572655f82015250565b5f61095e6020836107bb565b91506109698261092a565b602082019050919050565b5f6020820190508181035f83015261098b81610952565b9050919050565b5f60ff82169050919050565b6109a781610992565b82525050565b5f6080820190506109c05f83018761083c565b6109cd602083018661099e565b6109da604083018561083c565b6109e7606083018461083c565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f602082019050610a305f83018461083c565b9291505056fea2646970667358221220849ec8313bb0216cc2c2b1956f2f077f0a36828931986d51069de17158b53b4964736f6c634300081a0033';

// const factory = new ethers.ContractFactory(abi, bytecode, wallet);
// const contract = await factory.deploy();
// console.log(`合约地址: ${contract.target}`);
// console.log('部署合约的交易详情');
// console.log(contract.deploymentTransaction());
// console.log('\n等待合约部署上链');
// await contract.waitForDeployment();
// console.log('合约已上链');

// EIP712Domain: [
//   { name: 'name', type: 'string' },
//   { name: 'version', type: 'string' },
//   { name: 'chainId', type: 'uint256' },
//   { name: 'verifyingContract', type: 'address' },
// ];

// 1. 首先部署 ./EIP712Storage.sol，sepolia 部署合约地址: 0x3C256F393B88B01cB3E00c0BB7933a1563bF206C
const contractAddr = '0xf919e0394964885811bF30780aDB2e2C0c47a285';
const domain = {
  name: 'EIP712Storage',
  version: '1',
  chainId: '1',
  verifyingContract: contractAddr,
};

const types = {
  Storage: [
    { name: 'spender', type: 'address' },
    { name: 'number', type: 'uint256' },
  ],
};
const num = '100';
const message = {
  spender: address,
  number: num,
};

// EIP712 签名
console.log(domain, types, message);
const signature = await wallet.signTypedData(domain, types, message);
console.log('Signature:', signature);
// Signature: 0x24d81c60d8d3768362aebcf3504abba4898dd06007fc5eb9b9a285b742948ae12fcceafd17ab32880b74bd8d7bb624913c5c100d42e4f52803835e09f0741adf1b

// 验证 EIP712 签名，从签名和消息复原出 signer 地址
const eip712Signer = ethers.verifyTypedData(domain, types, message, signature);
console.log('EIP712 Signer: ', eip712Signer);
//EIP712 Signer: 0x3cf9a3265E00cfBda31bcFb90a11a684861d0E37

// 这个例子中，貌似合约的签名、解析代码跟 ethers 有点不一致，导致无法解析
// todo 带排查。。

const contract = new ethers.Contract(contractAddr, abi, wallet);
console.log('pre num: ', await contract.retrieve());
const iface = new ethers.Interface(abi);
console.log(iface.getFunction('getSigner').selector);
const signer = await contract.getSigner(address, num, signature);
console.log('链上解析得到的 : ', signer);
// const tx = await contract.permitStore(BigInt(num), signature);
// await tx.wait();
// console.log('链上验证签名并修改状态成功');
console.log('cur num: ', await contract.retrieve());
// pre num:  0n
// 0x5858aa26
// 链上解析得到的 :  0x035aF47caC8156a97D5f4501E2C82Da090d17DA0
// cur num:  0n
