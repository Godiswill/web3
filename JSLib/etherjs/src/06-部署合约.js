/**
 * 在以太坊上，智能合约的部署是一种特殊的交易：
 * 将编译智能合约得到的字节码发送到0地址。
 * 如果这个合约的构造函数有参数的话，需要利用abi.encode将参数编码为字节码，
 * 然后附在在合约字节码的尾部一起发送。
 *
 * 使用 ethers.js ContractFactory 合约工厂类，
 * 在 Sepolia 测试环境部署一个 WETH 合约，
 * 然后执行上一章的合约交互操作
 */

import { ethers } from 'ethers';
import abiWETH from './abi/WETH.json' assert { type: 'json' };

// 注意公共节点可能不更新或失效
// https://chainlist.org/chain/11155111 可以替换最新的可以接口用来测试
const ALCHEMY_SEPOLIA_URL = 'https://eth-sepolia.api.onfinality.io/public';
const provider = new ethers.JsonRpcProvider(ALCHEMY_SEPOLIA_URL);

const privateKey =
  '0xdf05966ab50e02a0c9b96a728ded9e646c2a324a8756bd0a2ef259902f72930d';
const wallet = new ethers.Wallet(privateKey, provider);
const address = await wallet.getAddress();

// WETH 的ABI、bytecode（Contract Creation Code） 信息：
// https://etherscan.io/token/0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2#code
// 你也可以复制合约代码在 remix中编译，你可以在两个地方找到Bytecode
// 1. 编译面板的 Bytecode 按钮
// 2. 文件面板 artifact 文件夹下与合约同名的 json 文件中
// 里面 "bytecode" 属性下的 "object" 字段对应的数据就是 Bytecode
const bytecodeWETH =
  '60606040526040805190810160405280600d81526020017f57726170706564204574686572000000000000000000000000000000000000008152506000908051906020019061004f9291906100c8565b506040805190810160405280600481526020017f57455448000000000000000000000000000000000000000000000000000000008152506001908051906020019061009b9291906100c8565b506012600260006101000a81548160ff021916908360ff16021790555034156100c357600080fd5b61016d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061010957805160ff1916838001178555610137565b82800160010185558215610137579182015b8281111561013657825182559160200191906001019061011b565b5b5090506101449190610148565b5090565b61016a91905b8082111561016657600081600090555060010161014e565b5090565b90565b610c348061017c6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100b9578063095ea7b31461014757806318160ddd146101a157806323b872dd146101ca5780632e1a7d4d14610243578063313ce5671461026657806370a082311461029557806395d89b41146102e2578063a9059cbb14610370578063d0e30db0146103ca578063dd62ed3e146103d4575b6100b7610440565b005b34156100c457600080fd5b6100cc6104dd565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561010c5780820151818401526020810190506100f1565b50505050905090810190601f1680156101395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561015257600080fd5b610187600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061057b565b604051808215151515815260200191505060405180910390f35b34156101ac57600080fd5b6101b461066d565b6040518082815260200191505060405180910390f35b34156101d557600080fd5b610229600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061068c565b604051808215151515815260200191505060405180910390f35b341561024e57600080fd5b61026460048080359060200190919050506109d9565b005b341561027157600080fd5b610279610b05565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a057600080fd5b6102cc600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610b18565b6040518082815260200191505060405180910390f35b34156102ed57600080fd5b6102f5610b30565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561033557808201518184015260208101905061031a565b50505050905090810190601f1680156103625780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561037b57600080fd5b6103b0600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610bce565b604051808215151515815260200191505060405180910390f35b6103d2610440565b005b34156103df57600080fd5b61042a600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610be3565b6040518082815260200191505060405180910390f35b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040518082815260200191505060405180910390a2565b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105735780601f1061054857610100808354040283529160200191610573565b820191906000526020600020905b81548152906001019060200180831161055657829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b600081600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156106dc57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156107b457507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414155b156108cf5781600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015151561084457600080fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190509392505050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410151515610a2757600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610ab457600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a250565b600260009054906101000a900460ff1681565b60036020528060005260406000206000915090505481565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc65780601f10610b9b57610100808354040283529160200191610bc6565b820191906000526020600020905b815481529060010190602001808311610ba957829003601f168201915b505050505081565b6000610bdb33848461068c565b905092915050565b60046020528160005260406000206020528060005260406000206000915091505054815600a165627a7a72305820deb4c2ccab3c2fdca32ab3f46728389c2fe2c165d5fafa07661e4e004f6c344a0029';

// 创建合约工厂实例
const factoryWETH = new ethers.ContractFactory(abiWETH, bytecodeWETH, wallet);

// 1. 利用contractFactory部署ERC20代币合约
console.log('\n1. 利用 contractFactory 部署 WETH ERC20 代币合约');
// 部署合约，填入constructor的参数
// const contractWETH = await factoryWETH.deploy('MyWrapETH Token', 'MWETH');
// WETH 不接收参数
const contractWETH = await factoryWETH.deploy();
console.log(`合约地址: ${contractWETH.target}`);
console.log('部署合约的交易详情');
console.log(contractWETH.deploymentTransaction());
console.log('\n等待合约部署上链');
await contractWETH.waitForDeployment();
// 也可以用 contractERC20.deployTransaction.wait()
console.log('合约已上链'); // https://sepolia.etherscan.io/address/0xE5E4da5C05624459bdA2083e08b0AFf304c9fC52#code
// 1. 利用 contractFactory 部署 WETH ERC20 代币合约
// 合约地址: 0xE5E4da5C05624459bdA2083e08b0AFf304c9fC52
// 部署合约的交易详情
// ContractTransactionResponse {
//   provider: JsonRpcProvider {},
//   blockNumber: null,
//   blockHash: null,
//   index: undefined,
//   hash: '0xddb69f850c36753adcd5fa91e426029d4b996283eaef1a1aebd456184ef75fb7',
//   type: 2,
//   to: null,
//   from: '0x3cf9a3265E00cfBda31bcFb90a11a684861d0E37',
//   nonce: 6,
//   gasLimit: 807239n,
//   gasPrice: undefined,
//   maxPriorityFeePerGas: 1000000n,
//   maxFeePerGas: 35249634084n,
//   maxFeePerBlobGas: null,
//   data: '0x60606040526...0029',
//   value: 0n,
//   chainId: 11155111n,
//   signature: Signature { r: "0x20465081b33e1b3cea22743678fad170979bb19bdf1b2fbfae7662f17577f0fb", s: "0x1bc131f7283b0696717c8e1f6b6948c535c9d0457f0cf21ec1472182d7fd1d87", yParity: 0, networkV: null },
//   accessList: [],
//   blobVersionedHashes: null
// }

// 等待合约部署上链
// 合约已上链

console.log('\n2. 调用 deposit() 函数，存入0.001 ETH');
const tx = await contractWETH.deposit({
  value: ethers.parseEther('0.001'),
});
// 等待交易上链
await tx.wait();
console.log(`交易详情：`);
console.log(tx);
const balanceWETH_deposit = await contractWETH.balanceOf(address);
console.log(`存款后 WETH 持仓: ${ethers.formatEther(balanceWETH_deposit)}\n`);
console.log(`代币总供给: ${await contractWETH.totalSupply()}`);

// 2. 调用 deposit() 函数，存入0.001 ETH
// 交易详情：
// ContractTransactionResponse {
//   provider: JsonRpcProvider {},
//   blockNumber: null,
//   blockHash: null,
//   index: undefined,
//   hash: '0x0ad4e539506fc69ba70b214e4db6e6cc8d8abff9c3e5d707f0a536ce60a2bb51',
//   type: 2,
//   to: '0xE5E4da5C05624459bdA2083e08b0AFf304c9fC52',
//   from: '0x3cf9a3265E00cfBda31bcFb90a11a684861d0E37',
//   nonce: 7,
//   gasLimit: 45418n,
//   gasPrice: undefined,
//   maxPriorityFeePerGas: 1000000n,
//   maxFeePerGas: 34015601896n,
//   maxFeePerBlobGas: null,
//   data: '0xd0e30db0',
//   value: 1000000000000000n,
//   chainId: 11155111n,
//   signature: Signature { r: "0x60600a76345953d90f9d17315ba28a51a08279ae94a40e8e4cf8d8da15438be3", s: "0x7323cdc9b2927197f0070995fbe04f43d329d81e99136391f7f6593d798f3d29", yParity: 0, networkV: null },
//   accessList: [],
//   blobVersionedHashes: null
// }
// 存款后 WETH 持仓: 0.001
// 代币总供给: 1000000000000000n
